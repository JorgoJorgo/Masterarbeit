Mon Nov 11 15:13:13 2024
[main] i :  1
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  8
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  8
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  8
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  8
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  8
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  8
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
time elapsed 280.09339785575867
start time Mon Nov 11 15:13:13 2024
end time Mon Nov 11 15:17:53 2024
Mon Nov 11 15:17:53 2024
[main] i :  2
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  16
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  16
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  16
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  16
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing

Routing with a checkpoint started for :  3  ->  47
Fails in CP Routing :  [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
EDPS s to d : [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OTCP via EDPs started for  3  to  47
EDPs: [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
Routing OneTreeCP done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
[run_planar] len(nodes) :  60
[run_planar] nodes : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[run_planar] len(edges) :  328
[run_planar] edges : [(0, 3), (0, 59), (0, 2), (0, 47), (0, 5), (1, 31), (1, 2), (1, 29), (1, 51), (1, 20), (1, 52), (2, 59), (2, 0), (2, 1), (2, 13), (2, 21), (2, 51), (2, 47), (2, 20), (3, 27), (3, 0), (3, 59), (3, 5), (3, 4), (4, 45), (4, 3), (4, 27), (4, 7), (4, 6), (5, 47), (5, 0), (5, 3), (5, 54), (6, 7), (6, 4), (6, 45), (6, 12), (7, 57), (7, 4), (7, 6), (7, 12), (7, 28), (7, 58), (7, 53), (8, 29), (8, 10), (8, 9), (8, 17), (9, 40), (9, 10), (9, 8), (9, 17), (9, 46), (9, 19), (10, 8), (10, 31), (10, 29), (10, 36), (10, 32), (10, 15), (10, 40), (10, 9), (11, 34), (11, 46), (11, 30), (11, 51), (11, 44), (12, 7), (12, 6), (12, 45), (12, 57), (13, 2), (13, 57), (13, 21), (13, 25), (13, 16), (13, 22), (13, 26), (13, 52), (13, 20), (14, 42), (14, 50), (14, 56), (14, 49), (15, 33), (15, 10), (15, 40), (15, 32), (16, 25), (16, 13), (16, 22), (16, 23), (16, 43), (17, 9), (17, 8), (17, 29), (17, 19), (17, 44), (18, 37), (18, 28), (18, 35), (18, 50), (19, 46), (19, 9), (19, 17), (19, 44), (20, 13), (20, 2), (20, 1), (20, 52), (21, 2), (21, 13), (21, 57), (21, 38), (21, 27), (21, 59), (22, 16), (22, 13), (22, 26), (22, 43), (22, 55), (22, 37), (23, 16), (23, 53), (23, 25), (23, 58), (23, 43), (24, 26), (24, 52), (24, 42), (24, 49), (25, 23), (25, 57), (25, 13), (25, 16), (25, 53), (26, 22), (26, 13), (26, 52), (26, 24), (26, 37), (26, 42), (27, 4), (27, 3), (27, 45), (27, 38), (27, 21), (27, 59), (28, 18), (28, 7), (28, 58), (28, 35), (28, 55), (28, 43), (29, 10), (29, 31), (29, 1), (29, 17), (29, 8), (29, 44), (29, 51), (30, 11), (30, 54), (30, 34), (30, 47), (30, 51), (30, 41), (31, 10), (31, 1), (31, 29), (31, 52), (31, 36), (32, 48), (32, 10), (32, 15), (32, 33), (32, 36), (32, 39), (33, 32), (33, 15), (33, 48), (33, 56), (33, 50), (34, 30), (34, 46), (34, 11), (34, 41), (35, 18), (35, 28), (35, 55), (35, 37), (36, 52), (36, 31), (36, 10), (36, 32), (36, 39), (36, 49), (37, 35), (37, 22), (37, 26), (37, 50), (37, 18), (37, 55), (37, 42), (38, 57), (38, 45), (38, 27), (38, 21), (39, 36), (39, 32), (39, 48), (39, 49), (39, 56), (40, 46), (40, 15), (40, 10), (40, 9), (41, 46), (41, 34), (41, 30), (41, 54), (42, 50), (42, 37), (42, 26), (42, 24), (42, 49), (42, 14), (43, 28), (43, 58), (43, 23), (43, 16), (43, 22), (43, 55), (44, 11), (44, 46), (44, 19), (44, 17), (44, 29), (44, 51), (45, 27), (45, 6), (45, 4), (45, 12), (45, 57), (45, 38), (46, 9), (46, 11), (46, 40), (46, 44), (46, 19), (46, 41), (46, 34), (47, 54), (47, 30), (47, 51), (47, 2), (47, 0), (47, 5), (48, 33), (48, 39), (48, 32), (48, 56), (49, 24), (49, 52), (49, 36), (49, 39), (49, 56), (49, 14), (49, 42), (50, 14), (50, 33), (50, 18), (50, 37), (50, 42), (50, 56), (51, 30), (51, 11), (51, 44), (51, 29), (51, 1), (51, 2), (51, 47), (52, 24), (52, 13), (52, 20), (52, 1), (52, 31), (52, 36), (52, 49), (52, 26), (53, 58), (53, 7), (53, 57), (53, 25), (53, 23), (54, 5), (54, 41), (54, 30), (54, 47), (55, 28), (55, 43), (55, 22), (55, 37), (55, 35), (56, 39), (56, 48), (56, 33), (56, 50), (56, 14), (56, 49), (57, 12), (57, 45), (57, 13), (57, 7), (57, 21), (57, 38), (57, 53), (57, 25), (58, 23), (58, 28), (58, 7), (58, 53), (58, 43), (59, 21), (59, 27), (59, 3), (59, 0), (59, 2)]
[run_planar] len(fails) :  16
[run_planar] fails : [(59, 21), (49, 24), (24, 52), (59, 0), (56, 50), (43, 55), (5, 47), (11, 46), (50, 42), (15, 33), (49, 39), (25, 53), (0, 3), (45, 27), (9, 40), (13, 25)]
experiment for  <function one_tree_pre at 0x71bb875391c0>
Done with precomputation algo
Start routing
Loop over samplesize is runing
Loop over stats is runing
Routing OT started for  3  to  47
EDPs:  [[3, 5, 47], [3, 59, 0, 47], [3, 0, 5, 54, 47], [3, 27, 59, 2, 47], [3, 4, 27, 21, 2, 51, 47]]
[RouteOneTree] current EDP: [3, 5, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (5, 47)
[RouteOneTree] passende fails: [(5, 47)]
[RouteOneTree] current EDP: [3, 59, 0, 47]
[RouteOneTree] Kante im EDP ist kaputt
[RouteOneTree] Untersuche Kante im EDP: (59, 0)
[RouteOneTree] passende fails: [(59, 21), (59, 0)]
[RouteOneTree] current EDP: [3, 0, 5, 54, 47]
Routing done via EDP
------------------------------------------------------
After simulate
success 1 <function one_tree_pre at 0x71bb875391c0>
experiment for  <function one_tree_with_random_checkpoint_pre at 0x71bb64b76160>
